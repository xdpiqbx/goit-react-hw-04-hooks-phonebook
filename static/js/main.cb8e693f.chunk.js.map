{"version":3,"sources":["components/ContactList/ContactList.module.scss","components/Filter/Filter.module.scss","components/ContactForm/ContactForm .js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.scss","components/Contact/Contact.module.scss","App.module.scss"],"names":["module","exports","ContactForm","state","name","number","onSubmitHandler","event","preventDefault","props","getContact","id","uuidv4","setState","onChangeInputHandler","currentTarget","value","className","s","onSubmit","this","ContactForm__title","ContactForm__input","type","onChange","ContactForm__btn","Component","Contact","contact","deleteContact","listItem","btn","onClick","ContactList","contacts","length","list","map","protoTypes","PropTypes","objectOf","shape","string","func","Filter","filter","filterHandler","container","App","useState","setContacts","setFilter","useEffect","contactsFromLocalstorage","localStorage","getItem","JSON","parse","setItem","stringify","console","log","AppContainer","newContact","find","alert","prevContacts","contacts__title","toLowerCase","includes","newContactList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb8e693f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1tVwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__2xSK1\"};","import PropTypes from 'prop-types';\r\n\r\nimport React, { Component } from 'react';\r\nimport s from './ContactForm.module.scss';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onSubmitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (name && number) {\r\n      this.props.getContact({\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  onChangeInputHandler = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={s.ContactForm}>\r\n        <form onSubmit={this.onSubmitHandler}>\r\n          <label>\r\n            <span className={s.ContactForm__title}>Name</span>\r\n            <input\r\n              className={s.ContactForm__input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.onChangeInputHandler}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span className={s.ContactForm__title}>Phone</span>\r\n            <input\r\n              className={s.ContactForm__input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.onChangeInputHandler}\r\n            />\r\n          </label>\r\n          <button className={s.ContactForm__btn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  getContact: PropTypes.func,\r\n  onSubmitHandler: PropTypes.func,\r\n  onChangeInputHandler: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport s from './Contact.module.scss';\r\n\r\nconst Contact = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li className={s.listItem}>\r\n      <span className={s.name}>{contact.name}: </span>\r\n      <span className={s.number}>{contact.number}</span>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => deleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object,\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\nimport Contact from '../Contact';\r\n\r\nimport s from './ContactList.module.scss';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  if (contacts.length > 0) {\r\n    return (\r\n      <ul className={s.list}>\r\n        {contacts.map(contact => (\r\n          <Contact\r\n            contact={contact}\r\n            deleteContact={deleteContact}\r\n            key={contact.id}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else {\r\n    return <h2>There is no contacts</h2>;\r\n  }\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.protoTypes = {\r\n  contacts: PropTypes.objectOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContact: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport s from './Filter.module.scss';\r\n\r\nconst Filter = ({ filter, filterHandler }) => {\r\n  return (\r\n    <div className={s.container}>\r\n      <h3>Find contacts by name</h3>\r\n      <input name=\"filter\" value={filter} onChange={filterHandler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.protoTypes = {\r\n  filter: PropTypes.string,\r\n  filterHandler: PropTypes.func,\r\n};\r\n","import s from './App.module.scss';\r\nimport { useState, useEffect } from 'react';\r\nimport ContactForm from './components/ContactForm/ContactForm ';\r\nimport ContactList from './components/ContactList';\r\nimport Filter from './components/Filter';\r\n\r\nexport default function App (){\r\n  \r\n  const [contacts, setContacts] = useState ('')\r\n  const [filter, setFilter] = useState ('')\r\n\r\n  useEffect(() => {\r\n    const contactsFromLocalstorage = localStorage.getItem('contacts');\r\n    setContacts([...(JSON.parse(contactsFromLocalstorage) ?? [])])\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    localStorage.setItem('contacts', JSON.stringify(contacts))\r\n    console.log(\"useEffect contacts\");\r\n  }, [contacts])\r\n  \r\n  const getContact = newContact => {\r\n    if (contacts) {\r\n      const res = contacts.find(\r\n        contact => contact.name === newContact.name,\r\n      );\r\n      if (res) {\r\n        alert(`${newContact.name} is already in contacts`);\r\n        return;\r\n      }\r\n    }\r\n    setContacts(prevContacts => ([newContact, ...prevContacts]))\r\n  };\r\n\r\n  const filterHandler = event => {\r\n    const { value } = event.currentTarget;\r\n    setFilter(value)\r\n  };\r\n\r\n  const getFilteredContacts = () => {\r\n    if (filter) {\r\n      return contacts.filter(contact =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n      );\r\n    } else {\r\n      return contacts;\r\n    }\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    const contactsFromLocalstorage = localStorage.getItem('contacts');\r\n    const newContactList = JSON.parse(contactsFromLocalstorage).filter(\r\n      contact => contact.id !== id,\r\n    );\r\n    localStorage.setItem('contacts', JSON.stringify(newContactList));\r\n\r\n    setContacts(newContactList)\r\n  };\r\n\r\n  return (\r\n    <div className={s.AppContainer}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm\r\n        getContact={getContact}\r\n      />\r\n      <h2 className={s.contacts__title}>Contacts</h2>\r\n      <Filter\r\n       filterHandler={filterHandler}\r\n       />\r\n      <ContactList\r\n        contacts={getFilteredContacts()}\r\n        deleteContact={deleteContact}\r\n      />\r\n    </div>\r\n  )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__3oYqT\",\"ContactForm__title\":\"ContactForm_ContactForm__title__19mIi\",\"ContactForm__input\":\"ContactForm_ContactForm__input__1AxIu\",\"ContactForm__btn\":\"ContactForm_ContactForm__btn__sdtxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__1sRQ9\",\"name\":\"Contact_name__2jhqD\",\"btn\":\"Contact_btn__2cm3g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__3kkDy\",\"contacts__title\":\"App_contacts__title__rqq1-\"};"],"sourceRoot":""}